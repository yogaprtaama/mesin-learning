{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO+S1RPxmPfLwKoJsmV/tmC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"LZXinfiEe42p","executionInfo":{"status":"ok","timestamp":1735963926434,"user_tz":-420,"elapsed":6564,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.cluster import KMeans\n","from sklearn.preprocessing import StandardScaler\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["# Ganti dengan path file Anda\n","file_path = 'online_retail_II.xlsx'\n","\n","# Muat data dari Excel\n","df = pd.read_excel(file_path)\n","\n","# Lihat informasi dataset\n","print(df.info())\n","print(df.head())\n","\n","df = df.dropna()\n","\n","df = df[df['Quantity'] > 0]\n","df = df[df['Price'] > 0]\n","df['TotalSales'] = df['Quantity'] * df['Price']\n","print(df.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DQ5TSksrfvnm","executionInfo":{"status":"ok","timestamp":1735964112583,"user_tz":-420,"elapsed":77548,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}},"outputId":"fa8f98d0-1f55-4c63-84b0-dc5edffa5245"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 525461 entries, 0 to 525460\n","Data columns (total 8 columns):\n"," #   Column       Non-Null Count   Dtype         \n","---  ------       --------------   -----         \n"," 0   Invoice      525461 non-null  object        \n"," 1   StockCode    525461 non-null  object        \n"," 2   Description  522533 non-null  object        \n"," 3   Quantity     525461 non-null  int64         \n"," 4   InvoiceDate  525461 non-null  datetime64[ns]\n"," 5   Price        525461 non-null  float64       \n"," 6   Customer ID  417534 non-null  float64       \n"," 7   Country      525461 non-null  object        \n","dtypes: datetime64[ns](1), float64(2), int64(1), object(4)\n","memory usage: 32.1+ MB\n","None\n","  Invoice StockCode                          Description  Quantity  \\\n","0  489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n","1  489434    79323P                   PINK CHERRY LIGHTS        12   \n","2  489434    79323W                  WHITE CHERRY LIGHTS        12   \n","3  489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n","4  489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n","\n","          InvoiceDate  Price  Customer ID         Country  \n","0 2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n","1 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n","2 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n","3 2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n","4 2009-12-01 07:45:00   1.25      13085.0  United Kingdom  \n","            Quantity                    InvoiceDate          Price  \\\n","count  407664.000000                         407664  407664.000000   \n","mean       13.585585  2010-07-01 10:15:11.871688192       3.294438   \n","min         1.000000            2009-12-01 07:45:00       0.001000   \n","25%         2.000000            2010-03-26 14:01:00       1.250000   \n","50%         5.000000            2010-07-09 15:47:00       1.950000   \n","75%        12.000000            2010-10-14 17:09:00       3.750000   \n","max     19152.000000            2010-12-09 20:01:00   10953.500000   \n","std        96.840747                            NaN      34.757965   \n","\n","         Customer ID     TotalSales  \n","count  407664.000000  407664.000000  \n","mean    15368.592598      21.664909  \n","min     12346.000000       0.001000  \n","25%     13997.000000       4.950000  \n","50%     15321.000000      11.900000  \n","75%     16812.000000      19.500000  \n","max     18287.000000   15818.400000  \n","std      1679.762138      77.150058  \n"]}]},{"cell_type":"code","source":["clustering_features = df[['Quantity', 'TotalSales']]\n","\n","# Standardisasi fitur agar memiliki skala yang seragam\n","scaler = StandardScaler()\n","clustering_features_scaled = scaler.fit_transform(clustering_features)\n","\n","inertia = []\n","for k in range(1, 11):\n","    kmeans = KMeans(n_clusters=k, random_state=42)\n","    kmeans.fit(clustering_features_scaled)\n","    inertia.append(kmeans.inertia_)\n","\n","plt.figure(figsize=(8, 5))\n","plt.plot(range(1, 11), inertia, marker='o')\n","plt.title('Elbow Method')\n","plt.xlabel('Jumlah Klaster')\n","plt.ylabel('Inertia')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"ENBjDB1bfwtx","executionInfo":{"status":"ok","timestamp":1735964148261,"user_tz":-420,"elapsed":4892,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}},"outputId":"26fa9214-f8ca-4bda-85ef-ffb944de7d81"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"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8OG4ceMGbt26BQCYNGkS3n33XXTr1g1z5szB0aNH73m9s2fP4tatW3j44Yfh7Owsvb766qu7prh07ty53P6IiMrCEE1EZCWUSiWEEGbHCgsL76qzs7OTfq9QKMo8ZjKZSr3PiBEjcPjwYXz++efYu3cvDh8+jHr16qGgoKDM+5Rct6xrlggODkZcXBy2bduGZ5555p5B+sKFC+jfvz/atm2Ln376CQkJCVi0aBEASL2MGTMG58+fx/Dhw3Hs2DF07twZCxcuLPOaJfOpN2zYgMOHD0uvEydOmM2LBor/YUBEdL8YoomIrESDBg2QmpoqvTcYDEhOTq70++zZsweTJk3Co48+itatW0OtVuP69euVdv327dsjLi4OO3fuxODBg0v9hwAAJCQkwGQy4eOPP0aXLl3QvHlzXL169a46X19fvPTSS/jf//6HV199VZoyolKpAABGo1GqDQoKglqtRkpKCpo2bWr28vX1rbSvkYiIIZqIyEo89NBD+Prrr7Fr1y4cO3YMI0aMgI2NTaXfp1mzZvj6669x8uRJ7Nu3D8OGDYODg0Ol3qNdu3bYunUrdu/eXWaQbtq0KQoLC7Fw4UKcP38eX3/9NZYuXWpWM3nyZGzZsgXJyck4dOgQtm3bhlatWgEA/P39oVAosH79ely7dg3Z2dlwcXHBa6+9hilTpmDVqlU4d+4cDh06hIULF2LVqlWV+jUSUd3GEE1EJCOTySStTzxz5kz06tUL/fv3R2RkJAYOHIgmTZpU+j3/+9//4ubNm+jYsSOGDx+OSZMmwdPTs9LvExwcjK1bt2Lv3r14+umn75ou0q5dO3zyySeYN28e2rRpg2+//RbR0dFmNUajEVFRUWjVqhX69u2L5s2bSw8dNmzYEHPnzsWMGTPg5eUlrUjyzjvvYNasWYiOjpY+t2HDBgQGBlb610hEdZdC/HMCHhERVZu+ffuiadOm+OKLL+RuhYiIKoAj0UREMrh58ybWr1+P7du3Izw8XO52iIiogrhONBGRDEaNGoUDBw7g1VdfxeOPPy53O0REVEGczkFEREREVEGczkFEREREVEEM0UREREREFcQQTURERERUQQzRREREREQVxBBNRERERFRBDNFERERERBXEEE1EREREVEEM0UREREREFfT/dMuHMxOvqKsAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["optimal_k = 3  # Ganti dengan jumlah klaster optimal berdasarkan elbow curve\n","kmeans = KMeans(n_clusters=optimal_k, random_state=42)\n","df['Cluster'] = kmeans.fit_predict(clustering_features_scaled)"],"metadata":{"id":"Ks_CVS8AgoNR","executionInfo":{"status":"ok","timestamp":1735964672667,"user_tz":-420,"elapsed":3,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["print(df['Cluster'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FM0CFchRgpnQ","executionInfo":{"status":"ok","timestamp":1735964731284,"user_tz":-420,"elapsed":319,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}},"outputId":"68d0e9a7-f2db-414a-ba78-7dbe074adfb6"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Cluster\n","0    406284\n","2      1319\n","1        61\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.scatterplot(data=df, x='Quantity', y='TotalSales', hue='Cluster', palette='Set1')\n","df['Quantity'] = pd.to_numeric(df['Quantity'], errors='coerce')\n","df['TotalSales'] = pd.to_numeric(df['TotalSales'], errors='coerce')\n","plt.title('Hasil Clustering')\n","plt.xlabel('Quantity')\n","plt.ylabel('TotalSales')\n","plt.legend(title='Cluster')\n","plt.show()\n","\n","print(df.groupby('Cluster').mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":977},"id":"IYOoZmOPgs8s","executionInfo":{"status":"error","timestamp":1735964753784,"user_tz":-420,"elapsed":20750,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}},"outputId":"fca66691-42ee-4e7d-98da-37147313a9d3"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"error","ename":"TypeError","evalue":"agg function failed [how->mean,dtype->object]","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36m_agg_py_fallback\u001b[0;34m(self, how, values, ndim, alt)\u001b[0m\n\u001b[1;32m   1941\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1942\u001b[0;31m             \u001b[0mres_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_grouper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0magg_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mser\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpreserve_dtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1943\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/ops.py\u001b[0m in \u001b[0;36magg_series\u001b[0;34m(self, obj, func, preserve_dtype)\u001b[0m\n\u001b[1;32m    863\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 864\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_aggregate_series_pure_python\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    865\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/ops.py\u001b[0m in \u001b[0;36m_aggregate_series_pure_python\u001b[0;34m(self, obj, func)\u001b[0m\n\u001b[1;32m    884\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroup\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msplitter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mextract_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m   2453\u001b[0m                 \u001b[0;34m\"mean\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2454\u001b[0;31m                 \u001b[0malt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2455\u001b[0m                 \u001b[0mnumeric_only\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mmean\u001b[0;34m(self, axis, skipna, numeric_only, **kwargs)\u001b[0m\n\u001b[1;32m   6548\u001b[0m     ):\n\u001b[0;32m-> 6549\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mNDFrame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnumeric_only\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6550\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mmean\u001b[0;34m(self, axis, skipna, numeric_only, **kwargs)\u001b[0m\n\u001b[1;32m  12419\u001b[0m     ) -> Series | float:\n\u001b[0;32m> 12420\u001b[0;31m         return self._stat_function(\n\u001b[0m\u001b[1;32m  12421\u001b[0m             \u001b[0;34m\"mean\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnanops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnanmean\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnumeric_only\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_stat_function\u001b[0;34m(self, name, func, axis, skipna, numeric_only, **kwargs)\u001b[0m\n\u001b[1;32m  12376\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 12377\u001b[0;31m         return self._reduce(\n\u001b[0m\u001b[1;32m  12378\u001b[0m             \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnumeric_only\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_reduce\u001b[0;34m(self, op, name, axis, skipna, numeric_only, filter_type, **kwds)\u001b[0m\n\u001b[1;32m   6456\u001b[0m                 )\n\u001b[0;32m-> 6457\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdelegate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/nanops.py\u001b[0m in \u001b[0;36mf\u001b[0;34m(values, axis, skipna, **kwds)\u001b[0m\n\u001b[1;32m    146\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 147\u001b[0;31m                 \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0malt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    148\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/nanops.py\u001b[0m in \u001b[0;36mnew_func\u001b[0;34m(values, axis, skipna, mask, **kwargs)\u001b[0m\n\u001b[1;32m    403\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 404\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipna\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/nanops.py\u001b[0m in \u001b[0;36mnanmean\u001b[0;34m(values, axis, skipna, mask)\u001b[0m\n\u001b[1;32m    718\u001b[0m     \u001b[0mcount\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_get_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype_count\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 719\u001b[0;31m     \u001b[0mthe_sum\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype_sum\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    720\u001b[0m     \u001b[0mthe_sum\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_ensure_numeric\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mthe_sum\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/_methods.py\u001b[0m in \u001b[0;36m_sum\u001b[0;34m(a, axis, dtype, out, keepdims, initial, where)\u001b[0m\n\u001b[1;32m     48\u001b[0m          initial=_NoValue, where=True):\n\u001b[0;32m---> 49\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mumr_sum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minitial\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwhere\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'int' and 'str'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-48e44c110f39>\u001b[0m in \u001b[0;36m<cell line: 11>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Cluster'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36mmean\u001b[0;34m(self, numeric_only, engine, engine_kwargs)\u001b[0m\n\u001b[1;32m   2450\u001b[0m             )\n\u001b[1;32m   2451\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2452\u001b[0;31m             result = self._cython_agg_general(\n\u001b[0m\u001b[1;32m   2453\u001b[0m                 \u001b[0;34m\"mean\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2454\u001b[0m                 \u001b[0malt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnumeric_only\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36m_cython_agg_general\u001b[0;34m(self, how, alt, numeric_only, min_count, **kwargs)\u001b[0m\n\u001b[1;32m   1996\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1997\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1998\u001b[0;31m         \u001b[0mnew_mgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrouped_reduce\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray_func\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1999\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_wrap_agged_manager\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_mgr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2000\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhow\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"idxmin\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"idxmax\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mgrouped_reduce\u001b[0;34m(self, func)\u001b[0m\n\u001b[1;32m   1467\u001b[0m                 \u001b[0;31m#  while others do not.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1468\u001b[0m                 \u001b[0;32mfor\u001b[0m \u001b[0msb\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mblk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1469\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1470\u001b[0m                     \u001b[0mresult_blocks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mextend_blocks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mapplied\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresult_blocks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1471\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, func, **kwargs)\u001b[0m\n\u001b[1;32m    391\u001b[0m         \u001b[0mone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    392\u001b[0m         \"\"\"\n\u001b[0;32m--> 393\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    394\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    395\u001b[0m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36marray_func\u001b[0;34m(values)\u001b[0m\n\u001b[1;32m   1993\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1994\u001b[0m             \u001b[0;32massert\u001b[0m \u001b[0malt\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1995\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_agg_py_fallback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mndim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1996\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1997\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/groupby/groupby.py\u001b[0m in \u001b[0;36m_agg_py_fallback\u001b[0;34m(self, how, values, ndim, alt)\u001b[0m\n\u001b[1;32m   1944\u001b[0m             \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"agg function failed [how->{how},dtype->{ser.dtype}]\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1945\u001b[0m             \u001b[0;31m# preserve the kind of exception that raised\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1946\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1947\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1948\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: agg function failed [how->mean,dtype->object]"]}]},{"cell_type":"code","source":["df.to_excel('Clustering_Results.xlsx', index=False)"],"metadata":{"id":"GeedgNB1gzYi","executionInfo":{"status":"ok","timestamp":1735964892478,"user_tz":-420,"elapsed":130045,"user":{"displayName":"Rafdi Magiana","userId":"04965772393399523087"}}},"execution_count":15,"outputs":[]}]}